{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n  setProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatarImg(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(this._checkResponse);\n  }\n  setCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","getCards","method","setProfile","name","about","body","JSON","stringify","setAvatarImg","data","avatar","setCard","link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/superkica/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n \n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method:'GET',\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n    }).then(this._checkResponse);\n  }\n\n  setProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setAvatarImg(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n}\n\n\nconst api = new Api({\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}