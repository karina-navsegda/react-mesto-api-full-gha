{"ast":null,"code":"/* const BASE_URL = \"https://auth.nomoreparties.co\"; */\nexport const baseUrl = \"http://localhost:3000\";\n\n/* const checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}; */\n\nfunction login(data) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(checkResponse);\n}\nfunction register(data) {\n  return fetch(`${baseUrl}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(checkResponse);\n}\n\n/* function register(password, email) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => checkResponse(res));\n}  */\n\nfunction checkToken(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n}\nexport { register, login, checkToken };","map":{"version":3,"names":["baseUrl","login","data","fetch","method","headers","body","JSON","stringify","then","checkResponse","register","checkToken","token","Authorization","res","getResponseData"],"sources":["/Users/superkica/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["/* const BASE_URL = \"https://auth.nomoreparties.co\"; */\nexport const baseUrl = \"http://localhost:3000\";\n\n/* const checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}; */\n\nfunction login(data) {\n  return fetch(`${baseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n}\n\n function register(data) {\n  return fetch(`${baseUrl}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(checkResponse);\n} \n\n/* function register(password, email) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => checkResponse(res));\n}  */\n\nfunction checkToken(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }) \n  .then(res => getResponseData(res))\n}\n\nexport { register, login, checkToken };\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAG,uBAAuB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAKA,CAACC,IAAI,EAAE;EACnB,OAAOC,KAAK,CAAE,GAAEH,OAAQ,SAAQ,EAAE;IAChCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC,CAACO,IAAI,CAACC,aAAa,CAAC;AACxB;AAEC,SAASC,QAAQA,CAACT,IAAI,EAAE;EACvB,OAAOC,KAAK,CAAE,GAAEH,OAAQ,SAAQ,EAAE;IAChCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC,CAACO,IAAI,CAACC,aAAa,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,UAAUA,CAACC,KAAK,EAAE;EACzB,OAAOV,KAAK,CAAE,GAAEH,OAAQ,WAAU,EAAE;IAClCI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC,CACDJ,IAAI,CAACM,GAAG,IAAIC,eAAe,CAACD,GAAG,CAAC,CAAC;AACpC;AAEA,SAASJ,QAAQ,EAAEV,KAAK,EAAEW,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}