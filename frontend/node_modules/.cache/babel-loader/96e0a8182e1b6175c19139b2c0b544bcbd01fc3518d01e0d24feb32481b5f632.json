{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  setProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(this._checkResponse);\n  }\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"e00d62af-84dc-4f42-9fe9-f9707f668d85\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","getCards","setProfile","name","about","method","body","JSON","stringify","setAvatarImg","data","avatar","setCard","link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/superkica/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  setProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then(this._checkResponse);\n  }\n\n\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"e00d62af-84dc-4f42-9fe9-f9707f668d85\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}