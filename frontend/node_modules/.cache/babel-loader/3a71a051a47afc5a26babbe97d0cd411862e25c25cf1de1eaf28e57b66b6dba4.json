{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n\n  /* setProfile(data) {\n      return fetch (`${this._url}/users/me`, {\n          method: 'PATCH',\n          headers: this._headers,\n          body: JSON.stringify({\n              name: data.edit__username,\n              about: data.edit__description\n          })\n      })\n      .then(this._checkResponse);\n  } */\n\n  setProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  setCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.place__name,\n        link: data.place__link\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n  headers: {\n    authorization: \"e00d62af-84dc-4f42-9fe9-f9707f668d85\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","then","getCards","setProfile","name","about","_baseUrl","method","body","JSON","stringify","setAvatarImg","data","avatar","setCard","place__name","link","place__link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/superkica/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\nthis._url = options.baseUrl;\nthis._headers = options.headers;\nthis._authorization = options.headers.authorization\n    }\n\n    _checkResponse(res) { return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`) };\n\ngetProfile(){\n    return fetch (`${this._url}/users/me`, {\n        headers: {\n            authorization: this._authorization\n        }\n    })\n    .then(this._checkResponse);\n\n}\n\ngetCards() {\n    return fetch (`${this._url}/cards`, {\n        headers: {\n            authorization: this._authorization\n        }\n    })\n    .then(this._checkResponse);\n}\n\n/* setProfile(data) {\n    return fetch (`${this._url}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n            name: data.edit__username,\n            about: data.edit__description\n        })\n    })\n    .then(this._checkResponse);\n} */\n\nsetProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse)\n\n  };\n\nsetAvatarImg(data) {\n    return fetch (`${this._url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n            avatar: data.avatar\n        })\n    })\n    .then(this._checkResponse);\n}\n\nsetCard(data) {\n    return fetch (`${this._url}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n            name: data.place__name,\n            link: data.place__link\n        })\n    })\n    .then(this._checkResponse);\n}\n\naddLike(cardId) {\n    return fetch (`${this._url}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: {\n            authorization: this._authorization\n        }\n    \n    })\n    .then(this._checkResponse);\n  \n}\n\nremoveLike(cardId) {\n    return fetch (`${this._url}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: {\n            authorization: this._authorization\n        }\n       \n    })\n    .then(this._checkResponse);\n}\n\ndeleteCard(cardId) {\n    return fetch (`${this._url}/cards/${cardId}`, {\n   \n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    })\n    .then(this._checkResponse);\n      \n  }\n\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-68\",\n    headers: {\n      authorization: \"e00d62af-84dc-4f42-9fe9-f9707f668d85\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  export default api;"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAWA,CAACC,OAAO,EAAE;IACzB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,OAAO;IAC3B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;IAC/B,IAAI,CAACC,cAAc,GAAGL,OAAO,CAACI,OAAO,CAACE,aAAa;EAC/C;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAAE,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAAC;EAE9FC,UAAUA,CAAA,EAAE;IACR,OAAOC,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,WAAU,EAAE;MACnCG,OAAO,EAAE;QACLE,aAAa,EAAE,IAAI,CAACD;MACxB;IACJ,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAE9B;EAEAU,QAAQA,CAAA,EAAG;IACP,OAAOF,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,QAAO,EAAE;MAChCG,OAAO,EAAE;QACLE,aAAa,EAAE,IAAI,CAACD;MACxB;IACJ,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC9B;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAW,UAAUA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACpB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACM,QAAS,WAAU,EAAE;MACxCC,MAAM,EAAE,OAAO;MACflB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBN,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA;MACT,CAAC;IACH,CAAC,CAAC,CAACJ,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAE9B;EAEFmB,YAAYA,CAACC,IAAI,EAAE;IACf,OAAOZ,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,kBAAiB,EAAE;MAC1CqB,MAAM,EAAE,OAAO;MACflB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBG,MAAM,EAAED,IAAI,CAACC;MACjB,CAAC;IACL,CAAC,CAAC,CACDZ,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC9B;EAEAsB,OAAOA,CAACF,IAAI,EAAE;IACV,OAAOZ,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,QAAO,EAAE;MAChCqB,MAAM,EAAE,MAAM;MACdlB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBoB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBN,IAAI,EAAEQ,IAAI,CAACG,WAAW;QACtBC,IAAI,EAAEJ,IAAI,CAACK;MACf,CAAC;IACL,CAAC,CAAC,CACDhB,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC9B;EAEA0B,OAAOA,CAACC,MAAM,EAAE;IACZ,OAAOnB,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,QAAO,EAAE;MAChDZ,MAAM,EAAE,KAAK;MACblB,OAAO,EAAE;QACLE,aAAa,EAAE,IAAI,CAACD;MACxB;IAEJ,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAE9B;EAEA4B,UAAUA,CAACD,MAAM,EAAE;IACf,OAAOnB,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,QAAO,EAAE;MAChDZ,MAAM,EAAE,QAAQ;MAChBlB,OAAO,EAAE;QACLE,aAAa,EAAE,IAAI,CAACD;MACxB;IAEJ,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAC9B;EAEA6B,UAAUA,CAACF,MAAM,EAAE;IACf,OAAOnB,KAAK,CAAG,GAAE,IAAI,CAACd,IAAK,UAASiC,MAAO,EAAC,EAAE;MAE5CZ,MAAM,EAAE,QAAQ;MAChBlB,OAAO,EAAE;QACPE,aAAa,EAAE,IAAI,CAACD;MACtB;IACF,CAAC,CAAC,CACDW,IAAI,CAAC,IAAI,CAACT,cAAc,CAAC;EAE5B;AAEF;AAEA,MAAM8B,GAAG,GAAG,IAAIvC,GAAG,CAAC;EAChBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACPE,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe+B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}