{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  setProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(this._checkResponse);\n  }\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\"\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_checkResponse","res","ok","json","Promise","reject","status","getProfile","fetch","headers","authorization","_authorization","then","getCards","setProfile","name","about","method","_headers","body","JSON","stringify","setAvatarImg","data","avatar","setCard","link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/superkica/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  setProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\",\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}