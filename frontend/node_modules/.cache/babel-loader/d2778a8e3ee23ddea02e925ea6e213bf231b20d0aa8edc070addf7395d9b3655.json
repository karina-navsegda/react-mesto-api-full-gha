{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n  getProfile(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n  getCards(token) {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n  setProfile(token, name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(this._checkResponse);\n  }\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_url","baseUrl","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getProfile","token","fetch","method","Authorization","then","getCards","setProfile","name","about","body","JSON","stringify","setAvatarImg","data","avatar","setCard","link","addLike","cardId","removeLike","deleteCard","api"],"sources":["/Users/superkica/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getProfile(token) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._checkResponse);\n  }\n\n  getCards(token) {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._checkResponse);\n  }\n\n  setProfile(token, name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setAvatarImg(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({ name, link }),\n    }).then(this._checkResponse);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}